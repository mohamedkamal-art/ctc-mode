
Session_6(Timer_0_CTC_Mode).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000466  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  00000466  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000466  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000498  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b37  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000074b  00000000  00000000  000010f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000054c  00000000  00000000  0000183e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a8  00000000  00000000  00001d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000454  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000411  00000000  00000000  00002388  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00002799  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__vector_10>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 65 01 	call	0x2ca	; 0x2ca <main>
  74:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_SetPinDir>:

				break;

			case DIO_PORTD :

				*Val = GET_BIT(PIND,Pin);
  7c:	44 23       	and	r20, r20
  7e:	b9 f1       	breq	.+110    	; 0xee <DIO_SetPinDir+0x72>
  80:	41 30       	cpi	r20, 0x01	; 1
  82:	09 f0       	breq	.+2      	; 0x86 <DIO_SetPinDir+0xa>
  84:	6b c0       	rjmp	.+214    	; 0x15c <DIO_SetPinDir+0xe0>
  86:	81 30       	cpi	r24, 0x01	; 1
  88:	89 f0       	breq	.+34     	; 0xac <DIO_SetPinDir+0x30>
  8a:	28 f0       	brcs	.+10     	; 0x96 <DIO_SetPinDir+0x1a>
  8c:	82 30       	cpi	r24, 0x02	; 2
  8e:	c9 f0       	breq	.+50     	; 0xc2 <DIO_SetPinDir+0x46>
  90:	83 30       	cpi	r24, 0x03	; 3
  92:	11 f1       	breq	.+68     	; 0xd8 <DIO_SetPinDir+0x5c>
  94:	08 95       	ret
  96:	2a b3       	in	r18, 0x1a	; 26
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_SetPinDir+0x26>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_SetPinDir+0x22>
  a6:	82 2b       	or	r24, r18
  a8:	8a bb       	out	0x1a, r24	; 26
  aa:	08 95       	ret
  ac:	27 b3       	in	r18, 0x17	; 23
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_SetPinDir+0x3c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_SetPinDir+0x38>
  bc:	82 2b       	or	r24, r18
  be:	87 bb       	out	0x17, r24	; 23
  c0:	08 95       	ret
  c2:	24 b3       	in	r18, 0x14	; 20
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_SetPinDir+0x52>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_SetPinDir+0x4e>
  d2:	82 2b       	or	r24, r18
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	08 95       	ret
  d8:	21 b3       	in	r18, 0x11	; 17
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <DIO_SetPinDir+0x68>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <DIO_SetPinDir+0x64>
  e8:	82 2b       	or	r24, r18
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	08 95       	ret
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	91 f0       	breq	.+36     	; 0x116 <DIO_SetPinDir+0x9a>
  f2:	28 f0       	brcs	.+10     	; 0xfe <DIO_SetPinDir+0x82>
  f4:	82 30       	cpi	r24, 0x02	; 2
  f6:	d9 f0       	breq	.+54     	; 0x12e <DIO_SetPinDir+0xb2>
  f8:	83 30       	cpi	r24, 0x03	; 3
  fa:	29 f1       	breq	.+74     	; 0x146 <DIO_SetPinDir+0xca>
  fc:	08 95       	ret
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDir+0x8e>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDir+0x8a>
 10e:	80 95       	com	r24
 110:	82 23       	and	r24, r18
 112:	8a bb       	out	0x1a, r24	; 26
 114:	08 95       	ret
 116:	27 b3       	in	r18, 0x17	; 23
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_SetPinDir+0xa6>
 11e:	88 0f       	add	r24, r24
 120:	99 1f       	adc	r25, r25
 122:	6a 95       	dec	r22
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_SetPinDir+0xa2>
 126:	80 95       	com	r24
 128:	82 23       	and	r24, r18
 12a:	87 bb       	out	0x17, r24	; 23
 12c:	08 95       	ret
 12e:	24 b3       	in	r18, 0x14	; 20
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_SetPinDir+0xbe>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_SetPinDir+0xba>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	21 b3       	in	r18, 0x11	; 17
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_SetPinDir+0xd6>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_SetPinDir+0xd2>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	81 bb       	out	0x11, r24	; 17
 15c:	08 95       	ret

0000015e <DIO_WritePin>:
 15e:	44 23       	and	r20, r20
 160:	b9 f1       	breq	.+110    	; 0x1d0 <DIO_WritePin+0x72>
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	09 f0       	breq	.+2      	; 0x168 <DIO_WritePin+0xa>
 166:	6b c0       	rjmp	.+214    	; 0x23e <DIO_WritePin+0xe0>
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	89 f0       	breq	.+34     	; 0x18e <DIO_WritePin+0x30>
 16c:	28 f0       	brcs	.+10     	; 0x178 <DIO_WritePin+0x1a>
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	c9 f0       	breq	.+50     	; 0x1a4 <DIO_WritePin+0x46>
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	11 f1       	breq	.+68     	; 0x1ba <DIO_WritePin+0x5c>
 176:	08 95       	ret
 178:	2b b3       	in	r18, 0x1b	; 27
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_WritePin+0x26>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_WritePin+0x22>
 188:	82 2b       	or	r24, r18
 18a:	8b bb       	out	0x1b, r24	; 27
 18c:	08 95       	ret
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_WritePin+0x3c>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_WritePin+0x38>
 19e:	82 2b       	or	r24, r18
 1a0:	88 bb       	out	0x18, r24	; 24
 1a2:	08 95       	ret
 1a4:	25 b3       	in	r18, 0x15	; 21
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_WritePin+0x52>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_WritePin+0x4e>
 1b4:	82 2b       	or	r24, r18
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	08 95       	ret
 1ba:	22 b3       	in	r18, 0x12	; 18
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_WritePin+0x68>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_WritePin+0x64>
 1ca:	82 2b       	or	r24, r18
 1cc:	82 bb       	out	0x12, r24	; 18
 1ce:	08 95       	ret
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	91 f0       	breq	.+36     	; 0x1f8 <DIO_WritePin+0x9a>
 1d4:	28 f0       	brcs	.+10     	; 0x1e0 <DIO_WritePin+0x82>
 1d6:	82 30       	cpi	r24, 0x02	; 2
 1d8:	d9 f0       	breq	.+54     	; 0x210 <DIO_WritePin+0xb2>
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	29 f1       	breq	.+74     	; 0x228 <DIO_WritePin+0xca>
 1de:	08 95       	ret
 1e0:	2b b3       	in	r18, 0x1b	; 27
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_WritePin+0x8e>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_WritePin+0x8a>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	8b bb       	out	0x1b, r24	; 27
 1f6:	08 95       	ret
 1f8:	28 b3       	in	r18, 0x18	; 24
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_WritePin+0xa6>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_WritePin+0xa2>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	88 bb       	out	0x18, r24	; 24
 20e:	08 95       	ret
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_WritePin+0xbe>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_WritePin+0xba>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	85 bb       	out	0x15, r24	; 21
 226:	08 95       	ret
 228:	22 b3       	in	r18, 0x12	; 18
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_WritePin+0xd6>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_WritePin+0xd2>
 238:	80 95       	com	r24
 23a:	82 23       	and	r24, r18
 23c:	82 bb       	out	0x12, r24	; 18
 23e:	08 95       	ret

00000240 <DIO_TogglePin>:



void DIO_TogglePin(uint8 port , uint8 pin)
{
	switch(port)
 240:	81 30       	cpi	r24, 0x01	; 1
 242:	89 f0       	breq	.+34     	; 0x266 <DIO_TogglePin+0x26>
 244:	28 f0       	brcs	.+10     	; 0x250 <DIO_TogglePin+0x10>
 246:	82 30       	cpi	r24, 0x02	; 2
 248:	c9 f0       	breq	.+50     	; 0x27c <DIO_TogglePin+0x3c>
 24a:	83 30       	cpi	r24, 0x03	; 3
 24c:	11 f1       	breq	.+68     	; 0x292 <DIO_TogglePin+0x52>
 24e:	08 95       	ret
	{
		case DIO_PORTA :
		Toggle_BIT(PORTA , pin);
 250:	2b b3       	in	r18, 0x1b	; 27
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_TogglePin+0x1c>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	6a 95       	dec	r22
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_TogglePin+0x18>
 260:	82 27       	eor	r24, r18
 262:	8b bb       	out	0x1b, r24	; 27
		break;
 264:	08 95       	ret
		
		case DIO_PORTB :
		Toggle_BIT(PORTB , pin);
 266:	28 b3       	in	r18, 0x18	; 24
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_TogglePin+0x32>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_TogglePin+0x2e>
 276:	82 27       	eor	r24, r18
 278:	88 bb       	out	0x18, r24	; 24
		break;
 27a:	08 95       	ret
		
		case DIO_PORTC :
		Toggle_BIT(PORTC , pin);
 27c:	25 b3       	in	r18, 0x15	; 21
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 c0       	rjmp	.+4      	; 0x288 <DIO_TogglePin+0x48>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	6a 95       	dec	r22
 28a:	e2 f7       	brpl	.-8      	; 0x284 <DIO_TogglePin+0x44>
 28c:	82 27       	eor	r24, r18
 28e:	85 bb       	out	0x15, r24	; 21
		break;
 290:	08 95       	ret
		
		case DIO_PORTD :
		Toggle_BIT(PORTD , pin);
 292:	22 b3       	in	r18, 0x12	; 18
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	02 c0       	rjmp	.+4      	; 0x29e <DIO_TogglePin+0x5e>
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	6a 95       	dec	r22
 2a0:	e2 f7       	brpl	.-8      	; 0x29a <DIO_TogglePin+0x5a>
 2a2:	82 27       	eor	r24, r18
 2a4:	82 bb       	out	0x12, r24	; 18
 2a6:	08 95       	ret

000002a8 <LED0_Init>:

/************** This function Turns off the LED0 in the AMIT kit ****************************/
void LED0_OFF(void)
{
	/*clear the bit number 2 in the PORTC Register to generate 0v*/
	DIO_WritePin(DIO_PORTC, DIO_PIN2 ,DIO_PIN_LOW);
 2a8:	41 e0       	ldi	r20, 0x01	; 1
 2aa:	62 e0       	ldi	r22, 0x02	; 2
 2ac:	82 e0       	ldi	r24, 0x02	; 2
 2ae:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetPinDir>
 2b2:	08 95       	ret

000002b4 <LED0_ON>:
 2b4:	41 e0       	ldi	r20, 0x01	; 1
 2b6:	62 e0       	ldi	r22, 0x02	; 2
 2b8:	82 e0       	ldi	r24, 0x02	; 2
 2ba:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_WritePin>
 2be:	08 95       	ret

000002c0 <LED0_toggle>:

/************** This function Toggles the LED0 in the AMIT kit ****************************/
void LED0_toggle(void)
{
	/*toggle the value in the bit number 2 in the PORTC Register */
	DIO_TogglePin(DIO_PORTC  , DIO_PIN2);
 2c0:	62 e0       	ldi	r22, 0x02	; 2
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	0e 94 20 01 	call	0x240	; 0x240 <DIO_TogglePin>
 2c8:	08 95       	ret

000002ca <main>:



int main(void)
{
	LED0_Init();
 2ca:	0e 94 54 01 	call	0x2a8	; 0x2a8 <LED0_Init>
	LED0_ON();
 2ce:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <LED0_ON>
	
    Timer_Init();
 2d2:	0e 94 b8 01 	call	0x370	; 0x370 <Timer_Init>
	Timer_SetDelay(1000);
 2d6:	68 ee       	ldi	r22, 0xE8	; 232
 2d8:	73 e0       	ldi	r23, 0x03	; 3
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 c9 01 	call	0x392	; 0x392 <Timer_SetDelay>
	Timer_Start();
 2e2:	0e 94 c5 01 	call	0x38a	; 0x38a <Timer_Start>
 2e6:	ff cf       	rjmp	.-2      	; 0x2e6 <main+0x1c>

000002e8 <__vector_10>:
		
    }
}

ISR(TIMER0_COMP_vect)
{
 2e8:	1f 92       	push	r1
 2ea:	0f 92       	push	r0
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	0f 92       	push	r0
 2f0:	11 24       	eor	r1, r1
 2f2:	2f 93       	push	r18
 2f4:	3f 93       	push	r19
 2f6:	4f 93       	push	r20
 2f8:	5f 93       	push	r21
 2fa:	6f 93       	push	r22
 2fc:	7f 93       	push	r23
 2fe:	8f 93       	push	r24
 300:	9f 93       	push	r25
 302:	af 93       	push	r26
 304:	bf 93       	push	r27
 306:	ef 93       	push	r30
 308:	ff 93       	push	r31
	static uint32 count = 0;
	count++;
 30a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 30e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 312:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 316:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	a1 1d       	adc	r26, r1
 31e:	b1 1d       	adc	r27, r1
 320:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 324:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 328:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 32c:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
	if (count == 100)
 330:	84 36       	cpi	r24, 0x64	; 100
 332:	91 05       	cpc	r25, r1
 334:	a1 05       	cpc	r26, r1
 336:	b1 05       	cpc	r27, r1
 338:	51 f4       	brne	.+20     	; 0x34e <__vector_10+0x66>
	{
		LED0_toggle();
 33a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LED0_toggle>
		count = 0;
 33e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 342:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 346:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 34a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
	}
}
 34e:	ff 91       	pop	r31
 350:	ef 91       	pop	r30
 352:	bf 91       	pop	r27
 354:	af 91       	pop	r26
 356:	9f 91       	pop	r25
 358:	8f 91       	pop	r24
 35a:	7f 91       	pop	r23
 35c:	6f 91       	pop	r22
 35e:	5f 91       	pop	r21
 360:	4f 91       	pop	r20
 362:	3f 91       	pop	r19
 364:	2f 91       	pop	r18
 366:	0f 90       	pop	r0
 368:	0f be       	out	0x3f, r0	; 63
 36a:	0f 90       	pop	r0
 36c:	1f 90       	pop	r1
 36e:	18 95       	reti

00000370 <Timer_Init>:
void Timer_Stop(void)
{
	
	CLR_BIT(TCCR0,0);
	CLR_BIT(TCCR0,1);
	CLR_BIT(TCCR0,2);
 370:	83 b7       	in	r24, 0x33	; 51
 372:	88 60       	ori	r24, 0x08	; 8
 374:	83 bf       	out	0x33, r24	; 51
 376:	83 b7       	in	r24, 0x33	; 51
 378:	8f 7b       	andi	r24, 0xBF	; 191
 37a:	83 bf       	out	0x33, r24	; 51
 37c:	89 b7       	in	r24, 0x39	; 57
 37e:	81 60       	ori	r24, 0x01	; 1
 380:	89 bf       	out	0x39, r24	; 57
 382:	8f b7       	in	r24, 0x3f	; 63
 384:	80 68       	ori	r24, 0x80	; 128
 386:	8f bf       	out	0x3f, r24	; 63
 388:	08 95       	ret

0000038a <Timer_Start>:
 38a:	83 b7       	in	r24, 0x33	; 51
 38c:	85 60       	ori	r24, 0x05	; 5
 38e:	83 bf       	out	0x33, r24	; 51
 390:	08 95       	ret

00000392 <Timer_SetDelay>:
	
}


void Timer_SetDelay(uint32 Delay_Ms)
{
 392:	9b 01       	movw	r18, r22
 394:	ac 01       	movw	r20, r24
	/* tick time in micro second */
	uint8 Tick_Time_us = (1024 / 16);
	
	uint32 Total_Ticks = (Delay_Ms * 1000) / Tick_Time_us;
	
	OCR0 = Total_Ticks - 1;
 396:	a8 ee       	ldi	r26, 0xE8	; 232
 398:	b3 e0       	ldi	r27, 0x03	; 3
 39a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__muluhisi3>
 39e:	dc 01       	movw	r26, r24
 3a0:	cb 01       	movw	r24, r22
 3a2:	68 94       	set
 3a4:	15 f8       	bld	r1, 5
 3a6:	b6 95       	lsr	r27
 3a8:	a7 95       	ror	r26
 3aa:	97 95       	ror	r25
 3ac:	87 95       	ror	r24
 3ae:	16 94       	lsr	r1
 3b0:	d1 f7       	brne	.-12     	; 0x3a6 <Timer_SetDelay+0x14>
 3b2:	6f ef       	ldi	r22, 0xFF	; 255
 3b4:	68 0f       	add	r22, r24
 3b6:	6c bf       	out	0x3c, r22	; 60
 3b8:	08 95       	ret

000003ba <__muluhisi3>:
 3ba:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__umulhisi3>
 3be:	a5 9f       	mul	r26, r21
 3c0:	90 0d       	add	r25, r0
 3c2:	b4 9f       	mul	r27, r20
 3c4:	90 0d       	add	r25, r0
 3c6:	a4 9f       	mul	r26, r20
 3c8:	80 0d       	add	r24, r0
 3ca:	91 1d       	adc	r25, r1
 3cc:	11 24       	eor	r1, r1
 3ce:	08 95       	ret

000003d0 <__umulhisi3>:
 3d0:	a2 9f       	mul	r26, r18
 3d2:	b0 01       	movw	r22, r0
 3d4:	b3 9f       	mul	r27, r19
 3d6:	c0 01       	movw	r24, r0
 3d8:	a3 9f       	mul	r26, r19
 3da:	70 0d       	add	r23, r0
 3dc:	81 1d       	adc	r24, r1
 3de:	11 24       	eor	r1, r1
 3e0:	91 1d       	adc	r25, r1
 3e2:	b2 9f       	mul	r27, r18
 3e4:	70 0d       	add	r23, r0
 3e6:	81 1d       	adc	r24, r1
 3e8:	11 24       	eor	r1, r1
 3ea:	91 1d       	adc	r25, r1
 3ec:	08 95       	ret

000003ee <_exit>:
 3ee:	f8 94       	cli

000003f0 <__stop_program>:
 3f0:	ff cf       	rjmp	.-2      	; 0x3f0 <__stop_program>
